rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Match any document in the 'users' collection
    match /users/{userId} {
      allow read: if request.auth != null;  // Allow all authenticated users to read profiles
      allow write: if request.auth != null && request.auth.uid == userId;  // Only allow users to modify their own profile
    }
    
    // Match any document in the 'food_entries' collection
    match /food_entries/{entryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Friend requests
    match /friend_requests/{userId}/pending/{requestId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && (
        request.auth.uid == userId ||  // User can manage their received requests
        request.resource.data.fromUserId == request.auth.uid  // User can send requests
      );
    }
    
    // Friends list
    match /friends/{userId}/user_friends/{friendId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && (
        request.auth.uid == userId ||  // User can manage their friends list
        request.auth.uid == friendId  // Friend can accept/remove friendship
      );
    }
    
    // Suggestions
    match /suggestions/{suggestionId} {
      allow read: if request.auth != null;  // Any authenticated user can read suggestions
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;  // Users can create their own suggestions
      allow update: if request.auth != null;  // Any authenticated user can update (for upvoting)
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;  // Only the creator can delete
    }
  }
} 